{"version":3,"file":"static/js/848.32019b56.chunk.js","mappings":"iOA8FA,UAxFc,WAAO,IAAD,IACRA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACAC,QAAQC,IAAIN,GACZ,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAKvDC,EAAAA,EAAAA,YAAU,WACF,IAAMC,EAAkB,IAAIC,gBADpB,wCAEhB,sGAEcC,EAFd,6CAE0DhB,EAF1D,sDAG+BiB,EAAAA,EAAAA,IAAUD,EAAK,CAClCE,OAAQJ,EAAgBI,SAJpC,OAGcC,EAHd,OAMQf,EAAgBe,EAASC,MANjC,gDAQIf,QAAQC,IAAI,KAAMe,SARtB,0DAFgB,sBAchB,OAdgB,mCAaZC,GACG,WACLR,EAAgBS,OACjB,CACA,GAAE,CAACvB,IAEJ,IAAQwB,EAAuDrB,EAAvDqB,MAAOC,EAAgDtB,EAAhDsB,aAAcC,EAAkCvB,EAAlCuB,SAAUC,EAAwBxB,EAAxBwB,YAAaC,EAAWzB,EAAXyB,OAC9CC,EAAuB,GAAfJ,EACRK,EAAaF,GAAUA,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAElE,OAAO,iCACH,SAAC,KAAD,CAAMC,GAAI1B,EAAgB2B,QAA1B,wBACA,2BACKT,GACH,gBACEU,IAAG,0CAAqCV,GACxCW,IAAKd,KAGP,gBACEa,IArCQ,wDAsCRC,IAAKd,KAGL,4BACI,wBACKA,KAEL,wCACaK,EADb,QAGA,sCAGA,uBACKH,KAEL,oCAGA,uBACKI,WAKb,2BACI,mDACA,yBACI,SAAC,KAAD,CAASK,GAAG,OAAZ,qBAIJ,yBACI,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAKR,SAAC,EAAAI,SAAD,WACE,SAAC,KAAD,QAGT,C","sources":["pages/movie.js"],"sourcesContent":["// import Cast from \"components/cast/cast\"\n// import Reviews from \"components/reviews/reviews\"\nimport { Suspense, useEffect, useRef, useState } from \"react\"\nimport { NavLink, useParams, Outlet, Link, useLocation } from \"react-router-dom\"\nimport axios from 'axios';\n\nconst Movie = () => {\n    const { id } = useParams()\n    const [movieDetails, setMovieDetails] = useState([]);\n    console.log(id)\n    const location = useLocation()\n    const backLocationRef = useRef(location.state?.from ?? '/')\n    const noImage = 'https://via.placeholder.com/200x300.png?text=No+Image';\n\n    // https://api.themoviedb.org/3/movie/343611?api_key=88e770eb9f81181b32f3aee56f617fc7\n\n    useEffect(() => {\n            const abortController = new AbortController();\n    async function fetchData() {\n        try {\n            const url = `https://api.themoviedb.org/3/movie/${id}?api_key=88e770eb9f81181b32f3aee56f617fc7`;\n            const response = await axios.get(url, {\n                signal: abortController.signal,\n            });\n            setMovieDetails(response.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n        fetchData();\n    return () => {\n      abortController.abort();\n    };\n    }, [id]);\n\n    const { title, vote_average, overview, poster_path, genres } = movieDetails\n    const score = vote_average * 10\n    const genreNames = genres && genres.map(genre => genre.name).join(' ');\n\n    return <>\n        <Link to={backLocationRef.current}>Come back</Link>\n        <div>\n            {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <img\n            src={noImage}\n            alt={title}\n          />\n        )}\n            <div>\n                <h1>\n                    {title}\n                </h1>\n                <p>\n                User Score: {score}%\n                </p>\n                <h2>\n                    Overview\n                </h2>\n                <p>\n                    {overview}\n                </p>\n                <h2>\n                    Genres\n                </h2>\n                <p>\n                    {genreNames}\n                </p>\n            </div>\n        </div>\n\n        <ul>\n            <p>Additional information</p>\n            <li>\n                <NavLink to='cast'>\n                    Cast\n                </NavLink>                \n            </li>\n            <li>\n                <NavLink to='reviews'>\n                  Reviews\n                </NavLink>        \n            </li>\n        </ul>\n        <Suspense>\n          <Outlet />             \n        </Suspense>\n    </>\n}\n\nexport default Movie"],"names":["id","useParams","useState","movieDetails","setMovieDetails","console","log","location","useLocation","backLocationRef","useRef","state","from","useEffect","abortController","AbortController","url","axios","signal","response","data","message","fetchData","abort","title","vote_average","overview","poster_path","genres","score","genreNames","map","genre","name","join","to","current","src","alt","Suspense"],"sourceRoot":""}