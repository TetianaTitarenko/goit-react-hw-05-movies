{"version":3,"file":"static/js/630.b09d7a58.chunk.js","mappings":"iOA6DA,UApDe,WAAO,IAAD,EACnB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAI,UAAGF,EAAaG,IAAI,eAApB,QAA+B,IAEzCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBADd,wCAEd,sGAEUC,EAFV,0DAEmEL,EAFnE,6DAG2BM,EAAAA,EAAAA,IAAUD,EAAK,CACpCE,OAAQJ,EAAgBI,SAJ9B,OAGUC,EAHV,OAMMd,EAAUc,EAASC,KAAKC,SAN9B,gDAQIC,QAAQC,IAAI,KAAMC,SARtB,0DAFc,sBAcd,OAdc,mCAadC,GACO,WACLX,EAAgBY,OACjB,CACF,GAAE,CAACf,IAEF,IAUQgB,EAAgBvB,EAAOwB,QAAO,SAACC,GAAD,OACpCA,EAAMC,MAAMC,cAAcC,SAASrB,EAAKoB,cADJ,IAItC,OAAW,4BACT,mCACA,kBAAME,SAhBS,SAAAC,GACfA,EAAEC,iBACFb,QAAQC,IAAIZ,EACb,EAaC,WACE,kBAAOyB,KAAK,OAAOC,MAAO1B,EAAM2B,SAbV,SAAAJ,GACxB,GAAuB,KAAnBA,EAAEK,OAAOF,MACX,OAAO3B,EAAgB,CAAC,GAE1BA,EAAgB,CAACC,KAAOuB,EAAEK,OAAOF,OAClC,KASG,mBAAQD,KAAK,SAAb,uBAGCT,EAAca,KAAI,SAACX,GAAD,OAAY,yBAC3B,SAAC,KAAD,CAAMY,GAAG,mBAAmBC,MAAO,CAACC,KAAMrC,GAA1C,SAAsDuB,EAAMC,SADxBD,EAAMe,GAA3B,MAI1B,C","sources":["pages/search.js"],"sourcesContent":["import { useState, useEffect} from \"react\"\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport axios from 'axios';\n// const API_KEY = '88e770eb9f81181b32f3aee56f617fc7';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const TREND_URL = `${BASE_URL}/trending/movie/week`;\n// const SEARCH_URL = `${BASE_URL}/search/movie`;\n// const MOVIE_DETAILS_URL = `${BASE_URL}/movie/`;\n// const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst Search = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation()\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get(\"name\") ?? '';\n  \n  useEffect(() => {\n    const abortController = new AbortController();\n    async function fetchData() {\n      try {\n        const url = `https://api.themoviedb.org/3/search/movie?query=${name}&api_key=88e770eb9f81181b32f3aee56f617fc7&page=1`;\n        const response = await axios.get(url, {\n          signal: abortController.signal,\n        });\n          setMovies(response.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchData();\n    return () => {\n      abortController.abort();\n    };\n  }, [name]);\n\n    const onSubmit = e => {\n      e.preventDefault();\n      console.log(name)\n    }\n    const updateQueryString = e => {\n      if (e.target.value === '') {\n        return setSearchParams({});\n      }\n      setSearchParams({name : e.target.value });\n    };\n      const visibleMovies = movies.filter((movie) =>\n      movie.title.toLowerCase().includes(name.toLowerCase())\n    );\n\n    return     <div>\n      <h1>Movie</h1>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={name} onChange={updateQueryString}/>\n        <button type=\"submit\">Search</button>\n      </form>\n\n        {visibleMovies.map((movie) => (<ul key={movie.id}>\n            <Link to='/movies/:movieId' state={{from: location}}>{movie.title}</Link>\n        </ul>))}\n    </div>\n}\n\nexport default Search"],"names":["useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","name","get","useEffect","abortController","AbortController","url","axios","signal","response","data","results","console","log","message","fetchData","abort","visibleMovies","filter","movie","title","toLowerCase","includes","onSubmit","e","preventDefault","type","value","onChange","target","map","to","state","from","id"],"sourceRoot":""}